<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cognizant.ams.dao.SmConfigMapper">
  <resultMap id="BaseResultMap" type="com.cognizant.ams.bean.SmConfig">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="ckey" jdbcType="VARCHAR" property="ckey" />
    <result column="cval1" jdbcType="VARCHAR" property="cval1" />
    <result column="cval2" jdbcType="VARCHAR" property="cval2" />
    <result column="cval3" jdbcType="VARCHAR" property="cval3" />
    <result column="create_time" jdbcType="CHAR" property="createTime" />
    <result column="chk" jdbcType="CHAR" property="chk" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.cognizant.ams.bean.SmConfig">
    <result column="cval4" jdbcType="LONGVARCHAR" property="cval4" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, ckey, cval1, cval2, cval3, create_time, chk
  </sql>
  <sql id="Blob_Column_List">
    cval4
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.cognizant.ams.bean.SmConfigExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sm_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.cognizant.ams.bean.SmConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sm_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.cognizant.ams.bean.SmConfigExample">
    delete from sm_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cognizant.ams.bean.SmConfig">
    insert into sm_config (id, type, ckey, 
      cval1, cval2, cval3, 
      create_time, chk, cval4
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{ckey,jdbcType=VARCHAR}, 
      #{cval1,jdbcType=VARCHAR}, #{cval2,jdbcType=VARCHAR}, #{cval3,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=CHAR}, #{chk,jdbcType=CHAR}, #{cval4,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cognizant.ams.bean.SmConfig">
    insert into sm_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="ckey != null">
        ckey,
      </if>
      <if test="cval1 != null">
        cval1,
      </if>
      <if test="cval2 != null">
        cval2,
      </if>
      <if test="cval3 != null">
        cval3,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="chk != null">
        chk,
      </if>
      <if test="cval4 != null">
        cval4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="ckey != null">
        #{ckey,jdbcType=VARCHAR},
      </if>
      <if test="cval1 != null">
        #{cval1,jdbcType=VARCHAR},
      </if>
      <if test="cval2 != null">
        #{cval2,jdbcType=VARCHAR},
      </if>
      <if test="cval3 != null">
        #{cval3,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="chk != null">
        #{chk,jdbcType=CHAR},
      </if>
      <if test="cval4 != null">
        #{cval4,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cognizant.ams.bean.SmConfigExample" resultType="java.lang.Long">
    select count(*) from sm_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sm_config
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.ckey != null">
        ckey = #{record.ckey,jdbcType=VARCHAR},
      </if>
      <if test="record.cval1 != null">
        cval1 = #{record.cval1,jdbcType=VARCHAR},
      </if>
      <if test="record.cval2 != null">
        cval2 = #{record.cval2,jdbcType=VARCHAR},
      </if>
      <if test="record.cval3 != null">
        cval3 = #{record.cval3,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=CHAR},
      </if>
      <if test="record.chk != null">
        chk = #{record.chk,jdbcType=CHAR},
      </if>
      <if test="record.cval4 != null">
        cval4 = #{record.cval4,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update sm_config
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      ckey = #{record.ckey,jdbcType=VARCHAR},
      cval1 = #{record.cval1,jdbcType=VARCHAR},
      cval2 = #{record.cval2,jdbcType=VARCHAR},
      cval3 = #{record.cval3,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=CHAR},
      chk = #{record.chk,jdbcType=CHAR},
      cval4 = #{record.cval4,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sm_config
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      ckey = #{record.ckey,jdbcType=VARCHAR},
      cval1 = #{record.cval1,jdbcType=VARCHAR},
      cval2 = #{record.cval2,jdbcType=VARCHAR},
      cval3 = #{record.cval3,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=CHAR},
      chk = #{record.chk,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <select id="getEmailConfigInfo" resultType="com.cognizant.ams.bean.SmConfig">
  		
		select * from sm_config where type='email'
  		
  </select>
  
  <select id="getScheduleConfigInfo" resultType="com.cognizant.ams.bean.SmConfig">
			select * from sm_config where type='scheduler'
  </select>
  
  
  
</mapper>